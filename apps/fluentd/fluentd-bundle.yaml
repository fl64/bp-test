---
apiVersion: v1
kind: Namespace
metadata:
  name: fluentd
---
# Source: fluentd/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
automountServiceAccountToken: true
---
# Source: fluentd/templates/forwarder-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
rules:
  - apiGroups:
      - ""
    resources:
      - "namespaces"
      - "pods"
    verbs:
      - "get"
      - "watch"
      - "list"
---
# Source: fluentd/templates/forwarder-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: fluentd
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: fluentd
---
# Source: fluentd/templates/forwarder-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: fluentd
  labels:
    app.kubernetes.io/component: forwarder
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 9880
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/component: forwarder
---
# Source: fluentd/templates/forwarder-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    spec:
      serviceAccountName: fluentd
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      containers:
        - name: fluentd
          image: docker.io/bitnami/fluentd:1.14.6-debian-11-r5
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: FLUENTD_CONF
              value: fluentd.conf
            - name: FLUENTD_OPT
              value: ""
            - name: FLUENTD_DAEMON_USER
              value: "root"
            - name: FLUENTD_DAEMON_GROUP
              value: "root"
          envFrom:
          resources:
            limits: {}
            requests: {}
          ports:
            - containerPort: 9880
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /fluentd.healthcheck?json=%7B%22ping%22%3A+%22pong%22%7D
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /fluentd.healthcheck?json=%7B%22ping%22%3A+%22pong%22%7D
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: fluentd-config
              mountPath: /opt/bitnami/fluentd/conf
            - name: buffer
              mountPath: /opt/bitnami/fluentd/logs/buffers
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      volumes:
        - name: fluentd-config
          configMap:
            name: fluentd
        - name: buffer
          emptyDir: {}
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
